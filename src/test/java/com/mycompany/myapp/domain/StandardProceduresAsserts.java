package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StandardProceduresAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStandardProceduresAllPropertiesEquals(StandardProcedures expected, StandardProcedures actual) {
        assertStandardProceduresAutoGeneratedPropertiesEquals(expected, actual);
        assertStandardProceduresAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStandardProceduresAllUpdatablePropertiesEquals(StandardProcedures expected, StandardProcedures actual) {
        assertStandardProceduresUpdatableFieldsEquals(expected, actual);
        assertStandardProceduresUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStandardProceduresAutoGeneratedPropertiesEquals(StandardProcedures expected, StandardProcedures actual) {
        assertThat(actual)
            .as("Verify StandardProcedures auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStandardProceduresUpdatableFieldsEquals(StandardProcedures expected, StandardProcedures actual) {
        assertThat(actual)
            .as("Verify StandardProcedures relevant properties")
            .satisfies(a -> assertThat(a.getIsActive()).as("check isActive").isEqualTo(expected.getIsActive()))
            .satisfies(a -> assertThat(a.getSpecification()).as("check specification").isEqualTo(expected.getSpecification()))
            .satisfies(a -> assertThat(a.getUserLogin()).as("check userLogin").isEqualTo(expected.getUserLogin()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStandardProceduresUpdatableRelationshipsEquals(StandardProcedures expected, StandardProcedures actual) {
        // empty method
    }
}
